{
    "archive_path": "archive/1632694281.959638",
    "base_url": "en.wikipedia.org/wiki/Gopher_%28protocol%29",
    "basename": "Gopher_%28protocol%29",
    "bookmarked_date": "2021-09-26 22:11",
    "canonical": {
        "archive_org_path": "https://web.archive.org/web/en.wikipedia.org/wiki/Gopher_%28protocol%29",
        "dom_path": "output.html",
        "favicon_path": "favicon.ico",
        "git_path": "git/",
        "google_favicon_path": "https://www.google.com/s2/favicons?domain=en.wikipedia.org",
        "headers_path": "headers.json",
        "index_path": "index.html",
        "media_path": "media/",
        "mercury_path": "mercury/content.html",
        "pdf_path": "output.pdf",
        "readability_path": "readability/content.html",
        "screenshot_path": "screenshot.png",
        "singlefile_path": "singlefile.html",
        "warc_path": "warc/",
        "wget_path": null
    },
    "domain": "en.wikipedia.org",
    "extension": "",
    "hash": "1WE28DAGXH3XTS89ZMZ7",
    "history": {
        "archive_org": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://web.archive.org/save/https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:12:03.349903+00:00",
                "index_texts": null,
                "output": "https://web.archive.org/web/20210926221158/https://en.wikipedia.org/wiki/Gopher_%28protocol%29",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:56.049733+00:00",
                "status": "succeeded"
            }
        ],
        "dom": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--dump-dom",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:11:39.070311+00:00",
                "index_texts": null,
                "output": "output.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:37.291879+00:00",
                "status": "succeeded"
            }
        ],
        "favicon": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--output",
                    "favicon.ico",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://www.google.com/s2/favicons?domain=en.wikipedia.org"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:11:23.391102+00:00",
                "index_texts": null,
                "output": "favicon.ico",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:23.237843+00:00",
                "status": "succeeded"
            }
        ],
        "git": [],
        "headers": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:11:23.551294+00:00",
                "index_texts": null,
                "output": "headers.json",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:23.410606+00:00",
                "status": "succeeded"
            }
        ],
        "media": [],
        "mercury": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/@postlight/mercury-parser/cli.js",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "1.0.0",
                "end_ts": "2021-09-26T22:11:56.031167+00:00",
                "index_texts": null,
                "output": "mercury",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:46.375904+00:00",
                "status": "succeeded"
            }
        ],
        "pdf": [],
        "readability": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/readability-extractor/readability-extractor",
                    "/run/user/1000/tmpco8jt1bc"
                ],
                "cmd_version": "0.0.3",
                "end_ts": "2021-09-26T22:11:46.344371+00:00",
                "index_texts": [
                    "\n\n\n\nThe Gopher protocol  is a communication protocol designed for distributing, searching, and retrieving documents in Internet Protocol networks. The design of the Gopher protocol and user interface is menu-driven, and presented an alternative to the World Wide Web in its early stages, but ultimately fell into disfavor, yielding to HTTP. The Gopher ecosystem is often regarded as the effective predecessor of the World Wide Web.[1][2]\nThe protocol was invented by a team led by Mark P. McCahill[3] at the University of Minnesota.  It offers some features not natively supported by the Web and imposes a much stronger hierarchy on the documents it stores. Its text menu interface is well-suited to computing environments that rely heavily on remote text-oriented computer terminals, which were still common at the time of its creation in 1991, and the simplicity of its protocol facilitated a wide variety of client implementations. More recent[when?] Gopher revisions and graphical clients added support for multimedia.[citation needed]\nGopher's hierarchical structure provided a platform for the first large-scale electronic library connections.[4] The Gopher protocol is still in use by enthusiasts, and although it has been almost entirely supplanted by the Web, a small population of actively-maintained servers remains.[2]\n\n\n\nOrigins\nGopher system was released in mid-1991 by Mark P. McCahill, Farhad Anklesaria, Paul Lindner, Daniel Torrey, and Bob Alberti of the University of Minnesota in the United States.[5] Its central goals were, as stated in RFC\u00a01436:\n\nA file-like hierarchical arrangement that would be familiar to users.\nA simple syntax.\nA system that can be created quickly and inexpensively.\nExtending the file system metaphor, such as searches.\nGopher combines document hierarchies with collections of services, including WAIS, the Archie and Veronica search engines, and gateways to other information systems such as File Transfer Protocol (FTP) and Usenet.\nThe general interest in campus-wide information systems (CWISs) in higher education at the time,[6] and the ease of setup of Gopher servers to create an instant CWIS with links to other sites' online directories and resources were the factors contributing to Gopher's rapid adoption.\nThe name was coined by Anklesaria as a play on several meanings of the word \"gopher\".[7] The University of Minnesota mascot is the gopher,[8] a gofer is an assistant who \"goes for\" things, and a gopher burrows through the ground to reach a desired location.[9]\n\nDecline\nThe World Wide Web was in its infancy in 1991, and Gopher services quickly became established. By the late 1990s, Gopher had ceased expanding. Several factors contributed to Gopher's stagnation:\n\nIn February 1993, the University of Minnesota announced that it would charge licensing fees for the use of its implementation of the Gopher server.[10][9] Users became concerned that fees might also be charged for independent implementations.[11][12] Gopher expansion stagnated, to the advantage of the World Wide Web, to which CERN disclaimed ownership.[13] In September 2000, the University of Minnesota re-licensed its Gopher software under the GNU General Public License.[14]\nGopher client functionality was quickly duplicated by the early Mosaic web browser, which subsumed its protocol.\nGopher has a more rigid structure than the free-form HTML of the Web. Every Gopher document has a defined format and type, and the typical user navigates through a single server-defined menu system to get to a particular document. This can be quite different from the way a user finds documents on the Web.\nGopher remains in active use by its enthusiasts, and there have been attempts to revive Gopher on modern platforms and mobile devices. One attempt is The Overbite Project,[15] which hosts various browser extensions and modern clients.\n\nServer census\nAs of 2012, there remained about 160 gopher servers indexed by Veronica-2,[16] reflecting a slow growth from 2007 when there were fewer than 100.[17] They are typically infrequently updated. On these servers Veronica indexed approximately 2.5 million unique selectors. A handful of new servers were being set up every year by hobbyists with over 50 having been set up and added to Floodgap's list since 1999.[18] A snapshot of Gopherspace in 2007 circulated on BitTorrent and was still available in 2010.[19] Due to the simplicity of the Gopher protocol, setting up new servers or adding Gopher support to browsers is often done in a tongue-in-cheek manner, principally on April Fools' Day.[20]\nIn November 2014 Veronica indexed 144 gopher servers,[16] reflecting a small drop from 2012, but within these servers Veronica indexed approximately 3\u00a0million unique selectors.\nIn March 2016 Veronica indexed 135 gopher servers,[16] within which it indexed approximately 4\u00a0million unique selectors.\nIn March 2017 Veronica indexed 133 gopher servers,[16] within which it indexed approximately 4.9\u00a0million unique selectors.\nIn May 2018 Veronica indexed 260 gopher servers,[16] within which it indexed approximately 3.7\u00a0million unique selectors.\nIn May 2019 Veronica indexed 320 gopher servers,[16] within which it indexed approximately 4.2\u00a0million unique selectors.\nIn January 2020 Veronica indexed 395 gopher servers,[16] within which it indexed approximately 4.5\u00a0million unique selectors.\nIn February 2021 Veronica indexed 361 gopher servers,[16] within which it indexed approximately 6\u00a0million unique selectors.\nTechnical details\nThe conceptualization of knowledge in \"Gopher space\" or a \"cloud\" as specific information in a particular file, and the prominence of the FTP, influenced the technology and the resulting functionality of Gopher.\n\nGopher characteristics\nGopher is designed to function and to appear much like a mountable read-only global network file system (and software, such as gopherfs, is available that can actually mount a Gopher server as a FUSE resource). At a minimum, whatever can be done with data files on a CD-ROM, can be done on Gopher.\nA Gopher system consists of a series of hierarchical hyperlinkable menus. The choice of menu items and titles is controlled by the administrator of the server.\n\nThe top level menu of a Gopher server. Selecting the \"Fun and Games\" menu item......takes the user to the \"Fun and Games\" menu.\nSimilar to a file on a Web server, a file on a Gopher server can be linked to as a menu item from any other Gopher server. Many servers take advantage of this inter-server linking to provide a directory of other servers that the user can access.\n\nProtocol\nThe Gopher protocol was first described in RFC\u00a01436. IANA has assigned TCP port 70 to the Gopher protocol.\nThe protocol is simple to negotiate, making it possible to browse without using a client. A standard gopher session may therefore appear as follows:\n\n/Reference\n1CIA World Factbook     /Archives/mirrors/textfiles.com/politics/CIA    gopher.quux.org 70\n0Jargon 4.2.0   /Reference/Jargon 4.2.0 gopher.quux.org 70      +\n1Online Libraries       /Reference/Online Libraries     gopher.quux.org 70     +\n1RFCs: Internet Standards       /Computers/Standards and Specs/RFC      gopher.quux.org 70\n1U.S. Gazetteer /Reference/U.S. Gazetteer       gopher.quux.org 70      +\niThis file contains information on United States        fake    (NULL)  0\nicities, counties, and geographical areas.  It has      fake    (NULL)  0\nilatitude/longitude, population, land and water area,   fake    (NULL)  0\niand ZIP codes. fake    (NULL)  0\ni       fake    (NULL)  0\niTo search for a city, enter the city's name.  To search        fake    (NULL) 0\nifor a county, use the name plus County -- for instance,        fake    (NULL) 0\niDallas County. fake    (NULL)  0\n\nHere, the client has established a TCP connection with the server on port 70, the standard gopher port. The client then sends a string followed by a carriage return followed by a line feed (a \"CR + LF\" sequence). This is the selector, which identifies the document to be retrieved. If the item selector were an empty line, the default directory would be selected. The server then replies with the requested item and closes the connection. According to the protocol, before the connection is closed, the server should send a full-stop (i.e., a period character) on a line by itself. However, as is the case here, not all servers conform to this part of the protocol and the server may close the connection without returning the final full-stop.\nIn this example, the item sent back is a gopher menu, a directory consisting of a sequence of lines each of which describes an item that can be retrieved. Most clients will display these as hypertext links, and so allow the user to navigate through gopherspace by following the links.[5]\nAll lines in a gopher menu are terminated by \"CR + LF\", and consist of five fields: the item type as the very first character (see below), the display string (i.e., the description text to display), a selector (i.e., a file-system pathname), host name (i.e., the domain name of the server on which the item resides), and port (i.e., the port number used by that server). The item type and display string are joined without a space; the other fields are separated by the tab character.\nBecause of the simplicity of the Gopher protocol, tools such as netcat make it possible to download Gopher content easily from the command line:\n\necho jacks/jack.exe | nc gopher.example.org 70 > jack.exe\n\nThe protocol is also supported by cURL as of 7.21.2-DEV.[21]\n\nSearch request\nThe selector string in the request can optionally be followed by a tab character and a search string. This is used by item type 7.\n\n\nGopher menu items are defined by lines of tab-separated values in a text file. This file is sometimes called a gophermap. As the source code to a gopher menu, a gophermap is roughly analogous to an HTML file for a web page. Each tab-separated line (called a selector line) gives the client software a description of the menu item: what it is, what it's called, and where it leads. The client displays the menu items in the order that they appear in the gophermap.\nThe first character in a selector line indicates the item type, which tells the client what kind of file or protocol the menu item points to. This helps the client decide what to do with it. Gopher's item types are a more basic precursor to the media type system used by the Web and email attachments.\nThe item type is followed by the user display string (a description or label that represents the item in the menu); the selector (a path or other string for the resource on the server); the hostname (the domain name or IP address of the server), and the network port.\nFor example: The following selector line generates a link to the \"/home\" directory at the subdomain gopher.floodgap.com, on port 70. The item type of 1 indicates that the resource is a Gopher menu. The string \"Floodgap Home\" is what the user sees in the menu.\n\n1Floodgap Home\t/home\tgopher.floodgap.com\t70\n\n\n\nItem type\nUser display string\nSelector\nHostname\nPort\n\n\n1\nFloodgap Home\n/home\ngopher.floodgap.com\n70\n\nItem types\nIn a Gopher menu's source code, a one-character code indicates what kind of content the client should expect. This code may either be a digit or a letter of the alphabet; letters are case-sensitive.\nThe technical specification for Gopher, RFC\u00a01436, defines 14 item types. The later gopher+ specification defined an additional 3 types.[22] A one-character code indicates what kind of content the client should expect. Item type 3 is an error code for exception handling. Gopher client authors improvised item types h (HTML), i (informational message), and s (sound file) after the publication of RFC 1436. Browsers like Netscape Navigator and early versions of Microsoft Internet Explorer would prepend the item type code to the selector as described in RFC\u00a04266, so that the type of the gopher item could be determined by the url itself. Most gopher browsers still available, use these prefixes in their urls.\n\n\n\nCanonical types\n\n\n0\nText file\n\n\n1\nGopher submenu\n\n\n2\nCCSO Nameserver\n\n\n3\nError code returned by a Gopher server to indicate failure\n\n\n4\nBinHex-encoded file (primarily for Macintosh computers)\n\n\n5\nDOS file\n\n\n6\nuuencoded file\n\n\n7\nGopher full-text search\n\n\n8\nTelnet\n\n\n9\nBinary file\n\n\n+\nMirror or alternate server (for load balancing or in case of primary server downtime)\n\n\ng\nGIF file\n\n\nI\nImage file\n\n\nT\nTelnet 3270\n\n\ngopher+ types\n\n\n:\nBitmap image\n\n\n;\nMovie file\n\n\n<\nSound file\n\n\nNon-canonical types\n\n\nd\nDoc.  Seen used alongside PDF's and .DOC's\n\n\nh\nHTML file\n\n\ni\nInformational message, widely used.[23]\n\n\ns\nSound file (especially the WAV format)\n\nURL links\nHistorically, to create a link to a Web server, \"GET /\" was used as a pseudo-selector to emulate an HTTP GET request. John Goerzen created an addition[24] to the Gopher protocol, commonly referred to as \"URL links\", that allows links to any protocol that supports URLs. For example, to create a link to http://gopher.quux.org/, the item type is h, the display string is the title of the link, the item selector is \"URL:http://gopher.quux.org/\", and the domain and port are that of the originating Gopher server (so that clients that do not support URL links will query the server and receive an HTML redirection page).\n\n\nGopher+\nGopher+ is a forward compatible enhancement to the Gopher protocol. Gopher+ works by sending metadata between the client and the server. The enhancement was never widely adopted by Gopher servers.[25][26][27]\n\nHow it works\nThe client sends a tab followed by a +. A Gopher+ server will respond with a status line followed by the content the client requested. An item is marked as supporting Gopher+ in the Gopher directory listing by a tab + after the port.\n\nOther features\nOther features of Gopher+ include:\n\nItem attributes, which can include the items\nAdministrator\nLast date of modification\nDifferent views of the file, like PostScript or plain text, or different languages\nAbstract, or description of the item\nInteractive queries\nExternal links\nProposed Gopher+ Specification (gopher link)\nSearch Engines\nVeronica\n\nThe master Gopherspace search engine is Veronica. Veronica offers a keyword search of all the public Internet Gopher server menu titles. A Veronica search produces a menu of Gopher items, each of which is a direct pointer to a Gopher data source. Individual Gopher servers may also use localized search engines specific to their content such as Jughead and Jugtail.\n\nJugtail\nJugtail (formerly Jughead) is a search engine system for the Gopher protocol. It is distinct from Veronica in that it searches a single server at a time.[28]\n\nGopherVR\n\nGopherVR is a 3D virtual reality variant of the original Gopher system.\n\nClient software\nGopher clients\nThis section needs expansion. You can help by adding to it.  (July 2021)\nThese are clients, libraries, and utilities primarily designed to access gopher resources.\n\n\n\n\nClient\n\nDeveloped by\n\nLatest version\n\nRelease date\n\nLicense\n\nWritten in\n\nNotes\n\n\nACID\n\nSSS8555\n\n0.777\n\nApril 2021\n\n?\n\nC\n\nGUI client for Windows. Supports page cache, TFTP and has G6 extension.\n\n\nGophie\n\n?\n\n1.0\n\nApril 2020\n\n?\n\nJava\n\nGUI client for Windows, MacOS and Linux.\n\n\nLagrange\n\n?\n\n0.8\n\nJune 2021\n\n2-clause BSD\n\nC\n\nGUI client with gemini and finger support.\n\n\nWeb clients\nWeb clients are browsers, libraries, and utilities primarily designed to access world wide web resources, but which maintain gopher support.\n\n\nCurrent web clients\nhide\n\nBrowser\n\nVersion\n\nNotes\n\nFirst supported\n\nLast supported\n\n\n\nBrowse\n\n?\n\nPresent\n\nThis browser is for RISC OS\n\n\ncURL\n\n7.21.2(October 2010)\n\nPresent\n\ncURL is a command-line file transfer utility\n\n\nDooble\n\n1.53\n\nPresent\n\n\n\n\nfelinks\n\n?\n\nPresent[29]\n\nOffers support as a build option\n\n\nFalkon\n\n3.1.0,with plug-in only\n\nPresent,with plug-in only\n\nRequires Falkon \u2265 3.1.0 with both the KDE Frameworks Integration extension (shipped with Falkon \u2265 3.1.0) enabled and the (separate) kio_gopher plug-in[30] \u2265 0.1.99 (first release for KDE Frameworks 5) installed\n\n\nGoogle Chrome\n\nWith extension only[31]\n\nN/A\n\nWith Burrow extension[32]\n\n\nKonqueror\n\nWith plug-in only\n\n?\n\nRequires kio_gopher plug-in[30]\n\n\nLynx\n\n?\n\nPresent\n\n\n\n\nMozilla Firefox\n\n0.1\n\n3.6\n\nBuilt-in support dropped from Firefox 4.0 onwards;[33] can be added back by installing one of the extensions by the Overbite Project[15]\n\n\nNetSurf\n\nN/A\n\nN/A\n\nUnder development, based on the cURL fetcher\n\n\nOpera\n\nN/A\n\nN/A\n\nOpera 9.0 includes a proxy capability\n\n\nPavuk\n\n?\n\nPresent\n\nPavuk is a web mirror (recursive download) software program\n\n\nWebPositive\n\n?\n\nPresent\n\nWebKit-based browser used in the Haiku operating system\n\n\nHistorical web clients\nshow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrowsers that do not natively support Gopher can still access servers using one of the available Gopher to HTTP gateways.\nGopher support was disabled in Internet Explorer versions 5.x and 6 for Windows in August 2002 by a patch meant to fix a security vulnerability in the browser's Gopher protocol handler to reduce the attack surface which was included in IE6 SP1; however, it can be re-enabled by editing the Windows registry. In Internet Explorer 7, Gopher support was removed on the WinINET level.[38]\n\nGopher browser extensions\nFor Mozilla Firefox and SeaMonkey, Overbite[15] extensions extend Gopher browsing and support the current versions of the browsers (Firefox Quantum v \u226557 and equivalent versions of SeaMonkey):\n\nOverbiteWX redirects gopher:// URLs to a proxy;\nOverbiteNX adds native-like support;\nfor Firefox up to 56.*, and equivalent versions of SeaMonkey, OverbiteFF adds native-like support, but it is no longer maintained\nOverbiteWX includes support for accessing Gopher servers not on port 70 using a whitelist and for CSO/ph queries. OverbiteFF always uses port 70.\nFor Chromium and Google Chrome, Burrow[32] is available. It redirects gopher:// URLs to a proxy. In the past an Overbite proxy-based extension for these browsers was available but is no longer maintained and does not work with the current (>23) releases.[15]\nFor Konqueror, Kio gopher[39] is available.\n\nGopher over HTTP gateways\nUsers of Web browsers that have incomplete or no support for Gopher can access content on Gopher servers via a server gateway or proxy server that converts Gopher menus into HTML; known proxies are the Floodgap Public Gopher proxy and Gopher Proxy. Similarly, certain server packages such as GN and PyGopherd have built-in Gopher to HTTP interfaces. Squid Proxy software gateways any gopher:// URL to HTTP content, enabling any browser or web agent to access gopher content easily.\n\nGopher clients for mobile devices\nSome[who?] have suggested that the bandwidth-sparing simple interface of Gopher would be a good match for mobile phones and personal digital assistants (PDAs),[40] but so far, mobile adaptations of HTML and XML and other simplified content have proven more popular. The PyGopherd server provides a built-in WML front-end to Gopher sites served with it.\nThe early 2010s saw a renewed interest in native Gopher clients for popular smartphones: Overbite, an open source client for Android 1.5+ was released in alpha stage in 2010.[41] PocketGopher was also released in 2010, along with its source code, for several Java ME compatible devices. Gopher Client was released in 2016 as a proprietary client for iPhone and iPad devices and is currently maintained.[42]\n\nOther Gopher clients\nGopher popularity was at its height at a time when there were still many equally competing computer architectures and operating systems. As a result, there are several Gopher clients available for Acorn RISC OS, AmigaOS, Atari MiNT, CMS, DOS, classic Mac OS, MVS, NeXT, OS/2 Warp, most UNIX-like operating systems, VMS, Windows 3.x, and Windows 9x. GopherVR was a client designed for 3D visualization, and there is even a Gopher client in MOO.[43][44] The majority of these clients are hard-coded to work on TCP port 70.\n\nServer software\nBecause the protocol is trivial to implement in a basic fashion, there are many server packages still available, and some are still maintained.\n\n\n\n\nServer\n\nDeveloped by\n\nLatest version\n\nRelease date\n\nLicense\n\nWritten in\n\nNotes\n\n\nAftershock\n\nRob Linwood\n\n1.0.1\n\n22 April 2004\n\nMIT\n\nJava\n\n\n\n\nApache::GopherHandler\n\nTimm Murray\n\n0.1\n\n26 March 2004\n\nGPLv2 or any later version\n\nPerl\n\nApache 2 plugin to run Gopher-Server.\n\n\nAtua\n\nCharles Childers\n\n2017.4\n\n9 October 2017\n\nISC\n\nForth\n\n\n\n\nBucktooth (gopher link) (proxied link)\n\nCameron Kaiser\n\n0.2.9\n\n1 May 2011\n\nFloodgap Free Software License\n\nPerl\n\n\n\n\nFlask-Gopher\n\nMichael Lazar\n\n2.2.1\n\n11 April 2020\n\nGPLv3\n\nPython\n\n\n\n\ngeomyid\n\nQuinn Evans\n\n0.0.1\n\n10 August 2015\n\n2-clause BSD\n\nCommon Lisp\n\n\n\n\ngeomyidae (gopher link) (proxied link)\n\nChristoph Lohmann\n\n0.34\n\n13 March 2019\n\nMIT\n\nC\n\n\n\n\nGoFish\n\nSean MacLennan\n\n1.2\n\n8 October 2010\n\nGPLv2\n\nC\n\n\n\n\nGopher-Server\n\nTimm Murray\n\n0.1.1\n\n26 March 2004\n\nGPLv2\n\nPerl\n\n\n\n\nGophernicus\n\nKim Holviala and others\n\n3.1.1\n\n3 January 2021\n\n2-clause BSD\n\nC\n\n\n\n\ngophrier\n\nGuillaume Duhamel\n\n0.2.3\n\n29 March 2012\n\nGPLv2\n\nC\n\n\n\n\nGoscher\n\nAaron W. Hsu\n\n8.0\n\n20 June 2011\n\nISC\n\nScheme\n\n\n\n\nmgod\n\nMate Nagy\n\n1.1\n\n29 January 2018\n\nGPLv3\n\nC\n\n\n\n\nMotsognir\n\nMateusz Viste\n\n1.0.13\n\n8 January 2021\n\nMIT\n\nC\n\n\n\n\nPituophis\n\ndotcomboom\n\n1.1\n\n16 May 2020\n\n2-clause BSD\n\nPython\n\nPython-based Gopher library with both server and client support\n\n\nPyGopherd\n\nJohn Goerzen\n\n2.0.18.5\n\n14 February 2017\n\nGPLv2\n\nPython\n\nAlso supports HTTP, WAP, and Gopher+\n\n\nRedis\n\nSalvatore Sanfilippo\n\n6.2.5\n\n21 July 2021\n\n3-clause BSD\n\nC\n\n\n\n\nsave_gopher_server\n\nSSS8555\n\n0.777\n\n7 July 2020\n\n?\n\nPerl\n\nwith G6 extension and TFTP\n\n\nSpacecookie\n\nLukas Epple\n\n1.0.0.0\n\n17 March 2021\n\nGPLv3\n\nHaskell\n\n\n\n\nXylophar\n\nNathaniel Leveck\n\n0.0.1\n\n15 January 2020\n\nGPLv3\n\nFreeBASIC\n\n\n\nSee also\n\n\nVeronica, search engine system for Gopher\nGopherVR\nJugtail (formerly Jughead), an alternative search engine for the Gopher protocol\nSDF Public Access Unix System \u2013 a non-profit organization which provides free Gopher hosting\nPhlog, the gopher version of a weblog\nWide area information server, search engine whose popularity was contemporaneous with Gopher's\nGemini (protocol), application layer protocol inspired by Gopher\nReferences\n\n^ Carlson, Scott (5 September 2016). \"How Gopher Nearly Won the Internet\". Chronicle of Higher Education. Retrieved 12 September 2016.\n\n^ Jump up to: a b \"How Moore's Law saved us from the Gopher web\". 12 March 2009. Archived from the original on 31 August 2011. Retrieved 20 September 2011.\n\n^ Mark P. McCahill interviewed on the TV show Triangulation on the TWiT.tv network\n\n^ Suzan D. McGinnis (2001). Electronic collection management. Routledge. pp.\u00a069\u201372. ISBN\u00a00-7890-1309-6.\n\n^ Jump up to: a b December, John; Randall, Neil (1994). The World Wide Web unleashed. Sams Publishing. p.\u00a020. ISBN\u00a01-57521-040-1.\n\n^ \"Google Groups archive of bit.listserv.cwis-l discussion\". Retrieved 27 July 2011.\n\n^ Mark McCahill, Farhad Anklesaria. \"Smart Solutions: Internet Gopher\" (Flash). Minneapolis: University of Minnesota Media Mill.  Event occurs at 2:40. Archived from the original on 20 July 2011. McCahill credits Anklesaria with naming Gopher\n\n^ \"Gophersports.com \u2013 Official Web Site of University of Minnesota Athletics\". Archived from the original on 14 August 2010. Retrieved 17 August 2010.\n\n^ Jump up to: a b Gihring, Tim. \"The rise and fall of the Gopher protocol\". minnpost.com. Retrieved 12 August 2016.\n\n^ \"Subject: University of Minnesota Gopher software licensing policy\". Funet.fi. Retrieved 12 August 2015.\n\n^ JQ Johnson (25 February 1993). \"Message from discussion gopher licensing\". Retrieved 27 July 2011.\n\n^ Joel Rubin (3 March 1999). \"CW from the VOA server page \u2013 rec.radio.shortwave\". Retrieved 27 July 2011.\n\n^ Johan S\u00f6derberg (2007). Hacking Capitalism: The Free and Open Source Software Movement. Routledge. p.\u00a025. ISBN\u00a0978-0-415-95543-0.\n\n^ \"Google Groups\". Retrieved 12 August 2015.\n\n^ Jump up to: a b c d e \"The Overbite Project\". Floodgap. Retrieved 25 July 2010.\n\n^ Jump up to: a b c d e f g h \"Floodgap Gopher-HTTP gateway gopher://gopher/0/v2/vstat\". Gopher.floodgap.com. Retrieved 5 January 2017.\n\n^ Kaiser, Cameron (19 March 2007). \"Down the Gopher Hole\". TidBITS. Retrieved 23 March 2007.\n\n^ http://gopher.floodgap.com/1/new Archived 4 August 2011 at the Wayback Machine\n\n^ \"Download A Piece of Internet History\". The Changelog. 28 April 2010. Archived from the original on 23 July 2011. Retrieved 27 July 2011.\n\n^ \"Release Notes \u2013 OmniWeb 5 \u2013 Products\". The Omni Group. Archived from the original on 7 August 2011. Retrieved 27 July 2011. OmniWeb 5.9.2 Released 1 April 2009: Implemented ground-breaking support for the revolutionary Gopher protocol\u2014a first for WebKit-based browsers! For a list of Gopher servers, see the Floodgap list. Enjoy!. The same text appears in the 5.10 release of 27 August 2009 further down the page, copied from the 5.9.2 unstable branch. The Floodgap list referred to is at Floodgap: new Gopher servers and does not itself refer to April Fools' Day.\n\n^ \"Curl: Re: Gopher patches for cURL (includes test suite)\". Archived from the original on 21 April 2019. Retrieved 9 March 2020.\n\n^ \"Gopher+ protocol specification\".\n\n^ \"Directory entry says what? Current Gopher type field types\".\n\n^ \"Gopher: gopher.2002-02\". Gopher.quux.org. Retrieved 12 August 2015.\n\n^ \"Re: New Gopher server and client\". Archived from the original on 10 March 2015. Retrieved 3 February 2012.\n\n^ \"Re: Server Contact Information\". Archived from the original on 10 March 2015. Retrieved 3 February 2012.\n\n^ Request for Comments: 4266 / The gopher URI scheme\n\n^ \"The lowdown on Archie, Gopher, Veronica and Jughead\".\n\n^ \"What advantages does Elinks have over the current original version of Links?\".\n\n^ Jump up to: a b \"Kio gopher - KDE UserBase Wiki\". userbase.kde.org. Archived from the original on 1 May 2018. Retrieved 1 May 2018.\n\n^ hotaru.firefly;  et\u00a0al. (2 May 2009). \"Issue 11345: gopher protocol doesn't work\". Retrieved 25 July 2011.\n\n^ Jump up to: a b \"Burrow: Gopherspace Explorer for Chrome\". Retrieved 1 July 2019.\n\n^ \"Bug 388195 \u2013 Remove gopher protocol support for Firefox\". Retrieved 15 June 2010.\n\n^ Fonseca, Jonas (24 December 2004). \"elinks-users ANNOUNCE ELinks-0.10.0 (Thelma)\". Linux From Scratch. Archived from the original on 20 February 2007. Retrieved 22 May 2010.\n\n^ \"Microsoft Security Bulletin MS02-047\". Microsoft. 28 February 2003. Archived from the original on 4 July 2011. Retrieved 23 March 2007.\n\n^ Sharps, Linda (1 April 2009). \"OmniWeb 5.9.2 now includes Gopher support\". The Omni Group. Archived from the original on 14 August 2011. Retrieved 3 April 2009.\n\n^ \"A comprehensive list of changes for each version of OmniWeb\". The Omni Group. 1 April 2009. Archived from the original on 7 August 2011. Retrieved 3 April 2009.\n\n^ \"Release Notes for Internet Explorer 7\". Microsoft. 2006. Archived from the original on 4 August 2011. Retrieved 23 March 2007.\n\n^ \"Kio gopher\". Retrieved 1 April 2017.\n\n^ Lore Sj\u00f6berg (12 April 2004). \"Gopher: Underground Technology\". Wired News. Archived from the original on 12 October 2008. Retrieved 27 July 2011.\n\n^ Paul, Ryan (6 July 2010). \"Overbite Project brings Gopher protocol to Android\". Ars Technica. Retrieved 25 July 2010.\n\n^ https://itunes.apple.com/us/app/gopher-client/id1235310088\n\n^ Riddle, Prentiss (13 April 1993). \"GopherCon '93: Internet Gopher Workshop and Internet Gopher Conference\". PrentissRiddle.com. Retrieved 20 May 2008.\n\n^ Masinter, Larry (1993). \"Collaborative information retrieval: Gopher from MOO\". CiteSeerX\u00a010.1.1.198.5779. \n\n\nExternal links\nList of public Gopher servers (Gopher link) (proxied link)\nAn announcement of Gopher on the Usenet 8 October 1991\nWhy is Gopher Still Relevant?\u00a0\u2014 a position statement on Gopher's survival\nThe Web may have won, but Gopher tunnels on\u00a0\u2014 an article published by the technology discussion site Ars Technica about the Gopher community of enthusiasts as of 5 November 2009\nHistory of Gopher\u00a0\u2014 Article in MinnPost\nGopherpedia\u00a0\u2014 Gopher interface for Wikipedia (Gopher link) (proxied link, by another proxy)\nMark McCahill and Farhad Anklesaria \u2013 gopher inventors \u2013 explain the evolution of gopher: part 1, part 2\n\n\n\n\n\n\n\n\n"
                ],
                "output": "readability",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:39.084706+00:00",
                "status": "succeeded"
            }
        ],
        "screenshot": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--screenshot",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:11:37.265960+00:00",
                "index_texts": null,
                "output": "screenshot.png",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:34.721296+00:00",
                "status": "succeeded"
            }
        ],
        "singlefile": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/single-file/cli/single-file",
                    "--browser-executable-path=chromium-browser",
                    "--browser-args=[\"--headless\", \"--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)\", \"--window-size=1440,2000\"]",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29",
                    "singlefile.html"
                ],
                "cmd_version": "0.3.31",
                "end_ts": "2021-09-26T22:11:34.704698+00:00",
                "index_texts": null,
                "output": "singlefile.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:23.567235+00:00",
                "status": "succeeded"
            }
        ],
        "title": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:11:23.213248+00:00",
                "index_texts": null,
                "output": "Gopher (protocol) - Wikipedia",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:11:22.326929+00:00",
                "status": "succeeded"
            }
        ],
        "wget": []
    },
    "icons": null,
    "is_archived": true,
    "is_static": false,
    "latest": {
        "archive_org": "https://web.archive.org/web/20210926221158/https://en.wikipedia.org/wiki/Gopher_%28protocol%29",
        "dom": "output.html",
        "favicon": "favicon.ico",
        "git": null,
        "media": null,
        "pdf": null,
        "screenshot": "screenshot.png",
        "singlefile": "singlefile.html",
        "title": "Gopher (protocol) - Wikipedia",
        "warc": null,
        "wget": null
    },
    "link_dir": "/home/wesleyac/code/notebook/data/archivebox/archive/1632694281.959638",
    "newest_archive_date": "2021-09-26T22:11:56.049733+00:00",
    "num_failures": 0,
    "num_outputs": 9,
    "oldest_archive_date": "2021-09-26T22:11:22.326929+00:00",
    "path": "/wiki/Gopher_%28protocol%29",
    "schema": "Link",
    "scheme": "https",
    "snapshot_id": "2171d9de-6186-45e1-9d61-b60e1c3df6f5",
    "sources": [
        "/home/wesleyac/code/notebook/data/archivebox/sources/1632694281-import.txt"
    ],
    "tags": null,
    "tags_str": "",
    "timestamp": "1632694281.959638",
    "title": "Gopher (protocol) - Wikipedia",
    "updated": "2021-09-26T22:11:22.324705+00:00",
    "updated_date": "2021-09-26 22:11",
    "url": "https://en.wikipedia.org/wiki/Gopher_%28protocol%29"
}