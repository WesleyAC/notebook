{
    "archive_path": "archive/1632693907.021447",
    "base_url": "www.recurse.com/blog/112-how-rc-uses-zulip",
    "basename": "112-how-rc-uses-zulip",
    "bookmarked_date": "2021-09-26 22:05",
    "canonical": {
        "archive_org_path": "https://web.archive.org/web/www.recurse.com/blog/112-how-rc-uses-zulip",
        "dom_path": "output.html",
        "favicon_path": "favicon.ico",
        "git_path": "git/",
        "google_favicon_path": "https://www.google.com/s2/favicons?domain=www.recurse.com",
        "headers_path": "headers.json",
        "index_path": "index.html",
        "media_path": "media/",
        "mercury_path": "mercury/content.html",
        "pdf_path": "output.pdf",
        "readability_path": "readability/content.html",
        "screenshot_path": "screenshot.png",
        "singlefile_path": "singlefile.html",
        "warc_path": "warc/",
        "wget_path": null
    },
    "domain": "www.recurse.com",
    "extension": "",
    "hash": "118R6VRMTFJNJATFGSG5",
    "history": {
        "archive_org": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://web.archive.org/save/https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:05:59.311420+00:00",
                "index_texts": null,
                "output": "https://web.archive.org/web/20210926220555/https://www.recurse.com/blog/112-how-rc-uses-zulip",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:52.315414+00:00",
                "status": "succeeded"
            }
        ],
        "dom": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--dump-dom",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:05:24.466052+00:00",
                "index_texts": null,
                "output": "output.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:22.230259+00:00",
                "status": "succeeded"
            }
        ],
        "favicon": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--output",
                    "favicon.ico",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://www.google.com/s2/favicons?domain=www.recurse.com"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:05:08.127287+00:00",
                "index_texts": null,
                "output": "favicon.ico",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:07.866390+00:00",
                "status": "succeeded"
            }
        ],
        "git": [],
        "headers": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:05:08.305860+00:00",
                "index_texts": null,
                "output": "headers.json",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:08.141952+00:00",
                "status": "succeeded"
            }
        ],
        "media": [],
        "mercury": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/@postlight/mercury-parser/cli.js",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "1.0.0",
                "end_ts": "2021-09-26T22:05:52.299271+00:00",
                "index_texts": null,
                "output": "mercury",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:44.685619+00:00",
                "status": "succeeded"
            }
        ],
        "pdf": [],
        "readability": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/readability-extractor/readability-extractor",
                    "/run/user/1000/tmpdmd8foi0"
                ],
                "cmd_version": "0.0.3",
                "end_ts": "2021-09-26T22:05:44.633850+00:00",
                "index_texts": [
                    "\n      The core of the Recurse Center is the community, and the core of our online community is Zulip, the open source real-time chat system.1\n\nWe started using Zulip four years ago this month. Our original reasons for adopting it were straightforward: We wanted a private chat system that was persistent, easily searchable, and which supported syntax highlighting for code snippets. We also wanted full names and profile pictures to make it easier for people in our community to find each other, both online and in real life.\n\nZulip gave us all the benefits above, along with a slew of others we hadn\u2019t expected. Switching to Zulip has turned out to be one of the best decisions we\u2019ve made, and it\u2019s impossible to imagine RC today without it.\n\nOne challenge is that it\u2019s become increasingly hard to explain how RC works to potential applicants, since we\u2019ve chosen to have a private Zulip server and so a lot of RC isn\u2019t publicly accessible. This post aims to share an important part of RC that\u2019s previously been nearly impossible to learn about without attending.\n\nWhy community is the core of RC\n\nRC is an educational institution with an integrated recruiting agency.2 We run full-time, in-person programming retreats in New York City. People come from around the world to spend six or twelve weeks programming together in a self-directed, collaborative, and supportive environment. The primary educational value comes from the participants themselves: It is peer-to-peer, which is why RC gets better as the community becomes larger and more diverse.\n\nWhile our retreats are in-person, online chat is a major part of RC. Participants use Zulip to ask and answer questions, get code review, and coordinate pairing sessions, reading groups, informal seminars, and countless other forms of collaboration. Zulip is even more essential for our alumni, who are in over 100 cities around the world but remain heavily involved thanks to Zulip.\n\nHow RC uses Zulip\n\nWe have a Zulip instance (called a \u201crealm\u201d) with approximately 1,000 members, who send 1,000-2,000 messages on any given weekday. For those not familiar with it, Zulip uses a system of streams (think channels) and topics (think threads). For instance, we have a graphics stream, and recent topics include \u201cOpenGL objects as process resources?\u201d and \u201cThree.js shaders.\u201d\n\nMany of our streams are dedicated to specific subjects. We have streams for programming languages (e.g., python), tools (e.g., git), and domains (e.g., machine learning). But many of the most significant and widely used streams at RC don\u2019t fall into one of those categories, and so I\u2019d like to focus this post on them.\n\nAlumni-checkins and checkins\n\nEvery day at 12:30am GMT, a bot called \u201cAlumni Bot\u201d starts a new topic for that day\u2019s checkins. As past Recursers and residents around the world start their days, many chime in with updates about what they\u2019re working on.\n\n\nMany alumni post daily updates on our alumni-checkins stream. Laura is currently stationed in Antarctica. Shared with permission.\n\nLike many of the best parts of RC, alumni-checkins was started by a Recurser. The stream has been so successful that we created a similar stream for current Recursers. We now have a checkins stream where people currently attending RC can share what they\u2019re working on, what they\u2019re stuck with, what they did the day before, etc. Here\u2019s an example:\n\n\nSome Recursers choose to post daily checkins to keep themselves on track, find collaborators, and get help. Shared with permission.\n\nWriting review\n\nThis stream is for getting feedback on writing. It\u2019s most commonly used for drafts of blog posts, but it\u2019s also used for conference proposals, talks, papers, and resumes. This stream works remarkably well, and nearly everyone who asks for it gets helpful review and feedback.\n\n\nRecursers give each other constructive feedback on the writing review stream. This request got feedback in under 30 minutes. Shared with permission.\n\nBlogging\n\nThis stream is powered by a blog aggregator (created by Recursers and appropriately named Blaggregator), which automatically posts links when Recursers who have opted-in post new blog posts. Each post gets linked under a new topic, which makes for easy, filterable discussion.\n\n\nRecursers have built a bot to automatically share new posts from the community. Shared with permission.\n\nRSVPs\n\nThe RSVPs stream is monitored by RSVPBot, an open source bot (authored by an RC alum) that supports creating and RSVPing to events. It also integrates with our Google Calendar, and it can be used to ping everyone attending an event when the event\u2019s about to start.\n\n\nA Recurser uses RSVPBot to set up a new event. Shared with permission.\n\nVictory\n\nThis stream is dedicated to sharing our victories, from \u201cmy pull request was accepted\u201d to \u201cI finally figured out this bug\u201d to \u201cI\u2019m having a baby!\u201d\n\n\nRecursers share personal successes on our Victory stream. Shared with permission.\n\nOpt-in streams\n\nWe also have non-default, opt-in streams like politics. Our community is focused on programming and becoming better programmers. But Recursers establish close bonds with each other and have wildly diverse interests beyond programming. Naturally, people want to discuss lots of non-programming things, some of which can be contentious or just distracting to others. To accommodate this without detracting from our primary goal (making a great place to become a better programmer), we have opt-in streams, like politics.\n\nOnly a glimpse\n\nThis post was challenging to write because I could only highlight a few of the tens of thousands of messages Recursers exchange each month, and which comprise our online community. Furthermore, like all of RC, both the Zulip software and how RC uses Zulip are constantly changing and far from perfect. There are lots of things we\u2019d like to improve or try, from better integrating Zulip with the rest of RC\u2019s internal software to introducing moderators.\n\nWe plan to write more about those things, hopefully before another four years pass.\n\n\nThank you to the Recursers who gave permission to share their messages. Thank you also to Sasha Laundy (W'13) and Puneeth Chaganti (S'14) who built and maintain our blog aggregator; Carlos Rey (SP2'15) who built RSVPBot; Andrew Drozdov (SP1'15 and S2'16) who started alumni-checkins; Zack Maril (S'13) who started Victory; and Dan Luu (W'13) who started writing review. Thank you also to RC resident Tim Abbott, who leads the Zulip open source project, and to the more than 20 Recursers who have contributed to it. Finally, thank you to the hundreds of Recursers and residents who post regularly on Zulip and make it such great community.\n\n\n\n  \n    You can read about Zulip\u2019s open sourcing and RC\u2019s involvement here.\u21a9\n    \n  \n  \n    RC is free to attend, and people are welcome regardless of if they\u2019re interested in new jobs (in fact, our admissions process explicitly ignores whether people want or can get a job in the US).\n    For people who are interested in new programming jobs, either immediately after RC or years later, we offer a range of recruiting services from individual counseling to interview prep to negotiation advice.\u21a9\n    \n  \n\n\n    "
                ],
                "output": "readability",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:24.485941+00:00",
                "status": "succeeded"
            }
        ],
        "screenshot": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--screenshot",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:05:22.201895+00:00",
                "index_texts": null,
                "output": "screenshot.png",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:19.175583+00:00",
                "status": "succeeded"
            }
        ],
        "singlefile": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/single-file/cli/single-file",
                    "--browser-executable-path=chromium-browser",
                    "--browser-args=[\"--headless\", \"--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)\", \"--window-size=1440,2000\"]",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip",
                    "singlefile.html"
                ],
                "cmd_version": "0.3.31",
                "end_ts": "2021-09-26T22:05:19.153747+00:00",
                "index_texts": null,
                "output": "singlefile.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:08.324678+00:00",
                "status": "succeeded"
            }
        ],
        "title": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://www.recurse.com/blog/112-how-rc-uses-zulip"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:05:07.844521+00:00",
                "index_texts": null,
                "output": "How RC uses Zulip - Blog - Recurse Center",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:05:07.468952+00:00",
                "status": "succeeded"
            }
        ],
        "wget": []
    },
    "icons": null,
    "is_archived": true,
    "is_static": false,
    "latest": {
        "archive_org": "https://web.archive.org/web/20210926220555/https://www.recurse.com/blog/112-how-rc-uses-zulip",
        "dom": "output.html",
        "favicon": "favicon.ico",
        "git": null,
        "media": null,
        "pdf": null,
        "screenshot": "screenshot.png",
        "singlefile": "singlefile.html",
        "title": "How RC uses Zulip - Blog - Recurse Center",
        "warc": null,
        "wget": null
    },
    "link_dir": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693907.021447",
    "newest_archive_date": "2021-09-26T22:05:52.315414+00:00",
    "num_failures": 0,
    "num_outputs": 9,
    "oldest_archive_date": "2021-09-26T22:05:07.468952+00:00",
    "path": "/blog/112-how-rc-uses-zulip",
    "schema": "Link",
    "scheme": "https",
    "snapshot_id": "a62ffdbb-a733-4903-80e6-a51b0dccbe62",
    "sources": [
        "/home/wesleyac/code/notebook/data/archivebox/sources/1632693907-import.txt"
    ],
    "tags": null,
    "tags_str": "",
    "timestamp": "1632693907.021447",
    "title": "How RC uses Zulip - Blog - Recurse Center",
    "updated": "2021-09-26T22:05:07.466547+00:00",
    "updated_date": "2021-09-26 22:05",
    "url": "https://www.recurse.com/blog/112-how-rc-uses-zulip"
}