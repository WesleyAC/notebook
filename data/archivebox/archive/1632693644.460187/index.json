{
    "archive_path": "archive/1632693644.460187",
    "base_url": "notebook.drmaciver.com",
    "basename": "",
    "bookmarked_date": "2021-09-26 22:00",
    "canonical": {
        "archive_org_path": "https://web.archive.org/web/notebook.drmaciver.com",
        "dom_path": "output.html",
        "favicon_path": "favicon.ico",
        "git_path": "git/",
        "google_favicon_path": "https://www.google.com/s2/favicons?domain=notebook.drmaciver.com",
        "headers_path": "headers.json",
        "index_path": "index.html",
        "media_path": "media/",
        "mercury_path": "mercury/content.html",
        "pdf_path": "output.pdf",
        "readability_path": "readability/content.html",
        "screenshot_path": "screenshot.png",
        "singlefile_path": "singlefile.html",
        "warc_path": "warc/",
        "wget_path": null
    },
    "domain": "notebook.drmaciver.com",
    "extension": "",
    "hash": "11BPRSQ9C7ESTHR5A8AY",
    "history": {
        "archive_org": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://web.archive.org/save/https://notebook.drmaciver.com/"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:01:57.180861+00:00",
                "index_texts": null,
                "output": "https://web.archive.org/web/20210926220139/https://notebook.drmaciver.com/",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:01:13.830371+00:00",
                "status": "succeeded"
            }
        ],
        "dom": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--dump-dom",
                    "https://notebook.drmaciver.com/"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:01:01.602184+00:00",
                "index_texts": null,
                "output": "output.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:01:00.017692+00:00",
                "status": "succeeded"
            }
        ],
        "favicon": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--output",
                    "favicon.ico",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://www.google.com/s2/favicons?domain=notebook.drmaciver.com"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:00:45.555727+00:00",
                "index_texts": null,
                "output": "favicon.ico",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:00:45.099190+00:00",
                "status": "succeeded"
            }
        ],
        "git": [],
        "headers": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--head",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://notebook.drmaciver.com/"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:00:45.757548+00:00",
                "index_texts": null,
                "output": "headers.json",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:00:45.575449+00:00",
                "status": "succeeded"
            }
        ],
        "media": [],
        "mercury": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/@postlight/mercury-parser/cli.js",
                    "https://notebook.drmaciver.com/"
                ],
                "cmd_version": "1.0.0",
                "end_ts": "2021-09-26T22:01:13.809121+00:00",
                "index_texts": null,
                "output": "mercury",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:01:06.643434+00:00",
                "status": "succeeded"
            }
        ],
        "pdf": [],
        "readability": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/readability-extractor/readability-extractor",
                    "/run/user/1000/tmpl8zv8kcb"
                ],
                "cmd_version": "0.0.3",
                "end_ts": "2021-09-26T22:01:06.611083+00:00",
                "index_texts": [
                    "\nDRMacIver's Notebook\nThoughts from David R. MacIver\n\n2021-08-08\nhow to write like this\n\nPublished\n2021-08-08\n\nLucy and I were talking about the You have to do the easy bits first piece, and she asked me how I wrote it.\nIt's a good question. I didn't answer it very well.\nHere, let's have another go.\nThe way to write like this is to write like this.\nThat isn't a very helpful answer, huh.\nOne more time.\nThe way to write like THIS is to write like THIS!\nthe way to write\nlike this\nis to write\nlike this\nthewaytowritelikethisistowritelike this\nYou see?\nThe way to change how you write is to change how you write.\nThe best part of the answer I gave Lucy earlier is that the thing where the paragraphs are short (I said one sentence, but actually looking again they're not) is more important than you'd think.\nThe way to change the voice you write in is to write in a different voice.\nAnd the voice of your writing is\ndetermined by its form. As you shift\nthe layout\nthe format\nthe literal physical way the words appear on the page\nthe sound of what you are writing changes, and with it the voice in which you write moves to match.\nWhen I write like this, in long discursive paragraphs, in which I patiently explain the thing I am doing to you, that is one voice. I can fuck with it if I want, right? Code switch mid paragraph. I don't have to write like a tedious book, but this is the tone that I naturally fall back into, because habits of writing are entrained ways of being, that one grows comfortable in. If you try to do a thing that is well served by a particular mode, you have to actively exert effort to avoid falling back into that mode. It's entirely possible, especially if you have other modes that you're used to and can borrow from, but without the clarity that those modes provide, it is difficult to avoid. It is hard to write differently without first deciding what that difference is, and the easiest form of difference is to be able to say \"More like that\".\nWhen you fuck with the form\nyou instantly break the habit\nbecause\nthe habit can no longer serve you.\nWill the result be good? Nah, probably not. That's OK.\nViktor Shklovsky thinks that art is about defamiliarisation, and I think this is even more true for the artist than for the viewer of the art.\nIn order to create art, you must first break out of your habitual mode of engaging with the thing you are depicting.\nAnything that breaks the habit by forcing you outside of what it can do will help you to achieve that,\nby pushing you into a mode where everything is strange, and giving you a space in which to learn that strangeness.\nbut if you do what you also do\nyou'll get what you always get.\nThis is uncomfortable at first, of course it is. You're learning a whole new way of engaging with the world through writing.\nStay with that discomfort, and write through it, and see what happens.\nOr, in short:\nThe way to write like this is to write like this.\n\n\n2021-08-07\nNotes towards a social technology R&D lab\n\nPublished\n2021-08-07\n\nI mentioned on Twitter that I'd like to run a \"small R&D lab where we mostly do low budget weird social technology nonsense\".\nThis was not something I mentioned as a serious plan, but a throwaway comment about escapist fantasies.\nThere was a surprising amount of interest in the idea though.\n\n\nIn response to this, people have quite reasonably be asking what it is I actually mean by this plan, because it's not obvious.\nSo I thought I'd try to articulate this.\n(This is not really a proper pitch document, more of a sketch of the idea, but if you've got some spare cash and want a proper pitch document it could definitely turn into one).\nWhat's social technology?\nI think people might have the wrong idea about what I mean by \"social technology\", which is fair enough as it's not a particularly commonly used term. By \"social technology\", I don't mean a type of software, I mean something more like sets of practices that people can do together, that have the character of technology, in that they are a well defined thing that benefits from research and development.\nI talked about this in The missing social technology sector. My definition from there is:\n\nSocial technology is \u201ctechnology\u201d built out of groups of people following rules, maybe with assistance from simple props, rather than software, machinery, etc.\n\nI've since read Nguyen's \"Games: Agency as Art\", which I think has helped refine my thoughts on this subject more. Social technology is technology built out of group agency. It builds a structure to constrain and support the sort of actions that a group can take together, in a way that helps them achieve some desired end.\nHere are some examples of a social technology:\n\nA pen and paper roleplaying game. Dungeons and Dragons is the classic example, but I think lightweight games like Lasers and Feelings or Four Sherlock Holmes and a Vampire. (Who Is Also One of the Aforementioned Sherlock Holmes) where the rules fit in a page are a more interesting set of examples.\nSpeed dating.\nLean Coffee\nCoaching and therapy type arrangements\n\nThese are designed with the following ends in mind:\n\nA roleplaying game has a ludic end (the thing you are trying to achieve in the game - uncover the vampire, prevent Zorgon the Conqueror from building a quantum tunnel that will rip a hole in reality), but the ultimate end is to have fun, and you are adopting the ludic end in order to achieve that.\nSpeed dating you are looking for people to date.\nLean Coffee you are trying to have a productive discussion across a range of topics, and the structure supports you in picking interesting topics and keeping the meeting on track.\nCoaching and therapy provide someone with a space to work through a particular problem of interest to them.\n\nThere are plenty of other examples, both explicit and implicit. For example, Liberating Structures is an entire group of people designing social technology for meetings, and every interviewing pipeline is an ad hoc and buggy piece of social technology. The academic field of social choice theory (which mostly designs voting systems) is a really interesting area of social technology that to within rounding error of nobody uses.\nOf course in a certain light almost everything people do is social technology. There isn't a hard and fast line that makes some things social technology and some things not social technology, in the same way \"But is it art?\" is an unanswerable question. As a concept, \"social technology\" is useful less for categorising things and more as a lens through which to view them.\nIn particular viewing something as social technology starts from asking two questions:\n\nWhat is this practice trying to do?\nHow can we do that better?\n\nWhy do we need social technology R&D?\nOne of the most common pieces of social technology that I've encountered outside of games is meeting facilitation.\nLiberating Structures is one of the best examples of meeting facilitation social technology that I'm familiar with,\nand mostly seems to be very good.\nIn contrast, most other social technology I've encountered for meeting faciliation are quite bad, and leans heavily on the skill of the meeting facilitator rather than the technology, and the technology itself is often quite clunky.\nTake lean coffee for example. A lot of people really like lean coffee. I attended some lean coffee sessions and they were awful. I loved the idea, I loved what it was trying to do, and the execution has obvious glaring flaws that I feel would have been obvious and easily fixable if they had ever done any sort of playtesting. I cannot imagine they did.\nIn response I designed TickTalk, which I think is pretty good. It could certainly use more play testing itself, but it's had some and I really do think it's far better than lean coffee.\nBrainstorming is another example. Brainstorming doesn't work. We're pretty sure of this now. It produces results that are worse than not using it. Many things like brainstorming work, and work well, but brainstorming itself very much doesn't.\nA little bit of development and experimentation could have revealed this early on, but instead as far as I can tell people just had an idea, slapped a name on it, and declared it the hot new thing that everyone should be doing, and it worked.\nThe common theme here (and why liberating structures tend to be Actually Good) is obvious I hope: Playtest your social technology, and learn from it and improve it.\nPeople don't do this enough, and are using really bad systems as a result.\nSocial technology R&D is the solution to this problem. You treat these systems as a piece of technology like any other, and you develop them as such. You try things, you see what works, and you refine based on that.\nThis isn't a novel idea in social technology, everyone who designes games knows this. If you make a game and don't playtest it, you'll get a game that isn't fun and nobody plays. In contrast, when you design a meeting facilitation system, it only has to be less bad than an unfacilitated meeting (this isn't hard), and also you can usually impose it by fiat, so there's much less direct incentive to be good. This is ridiculous though - meetings are expensive and potentially high value, so anything that increases that value or decrease that cost is obviously good.\nWeird low budget social technology nonsense?\nWhat I'm interested in has two defining features:\n\nDeveloping social technologies for a broad range of problems.\n...that can be implemented easily and cheaply.\n\nFor example, take speed dating. Has anyone actually ever done any speed dating R&D? Speed dating doesn't seem to work particularly well for people, and some of that is because dating is intrinsically awkward, but a lot of it does seem like the structure is just very poorly designed.\nI'm pretty confident nobody has ever done a detailed user experience analysis of speed dating and tried to improve it in a principled way. Someone just had the idea, people tweaked it a bit, and it mostly works well enough. For the same reason meeting design lacks a strong incentive to improve (because meetings are so bad that anything helps), speed dating has little incentive to improve (because there's no shortage of single people who would really like some help with dating).\nAdditionally, speed dating is primarily a low value proposition. People don't pay a lot for speed dating, so where would the budget for improving it come from?\n(People do use speed dating for research, but it seems to be primarily using speed dating as a methodology for studying romantic interactions. i.e. it's people taking the social technology as read and using it to do social science)\nTaking something like speed dating and improving it for its intended purpose, and also finding other interesting applications of those approaches (for example, what would a \"Speed dating, but you're there to make friends\" event look like? How should one do bi/poly speed dating? Could one do a speed dating event to start up a co-coaching network?), is the sort of low budget social technology I'd like to develop.\nAnother example of a problem I think would be interesting to study is this: How do you decide where to go for lunch?. Or where to go to the cinema. Or what to cook tonight... You get the idea. Collective decision making is common, but I don't actually know how common, and I don't know what the best way to do it is.\nI have a history of solving this for people by just telling them what to do, but it sure would be interesting to study this class of problem and how to do it better, wouldn't it?\nIn general, the sort of thing I would like to do is:\n\nIdentify reasonably common social problems.\nDevelop social technologies to improve them that can be explained in one or two pages, and implemented with cheap and/or commonly available tools.\n\nI think there is a lot of low hanging fruit of this nature, mostly based on the fact that the individual examples that gain traction don't seem like they're still very much picking low hanging fruit, and it shouldn't be hard to find others.\nWhat would this look like in practice?\nGosh, that's a great question, this has turned from a vague idea into something resembling a structured plan remarkably quickly, so this is the bit underspecified, so please bear in mind that I wasn't planning to do this for a while and part of the thing that this would look like in practice is getting a bunch of people together to figure out the details.\nThe general procedure we'd want to use for developing social technology is:\n\nCreate or identify a prototype piece of social technology with a Version 0 document describing it.\nPlaytest it amongst ourselves, then with random members of the public, until we're happy with it.\nPublish a Version 1.0 version of the social technology in public, probably under a CC BY-SA 4.0 license.\nOver time publish updated and improved versions of it in response to subsequent usage and feedback.\n\nBoth (1) and (2) are the bits that need a lot of trial and error. The following are probably the two main sources of prototypes:\n\nStudy what people actually do in the wild and extract it into something standalone.\nOften this can start from existing literature. e.g. speed dating comes pre studied. The \"teaching open ended style\" protocol from Vaughn Tan's The Uncertainty Mindset that I talked about in How to teach the local style is another example where you can just get it from books.\nOften you can get paid to find this out! Going into a company and consulting with them is a great way to find out what they actually do.\n\n\nStarting from problems people have (e.g. we could find this out by offering coaching and consultancy services) and then trying to generate solutions to those. This would probably need us to work a bit on the social technology that supports generating these solutions, but I expect we'd be using Liberating Structures or the like as starting points for that rather than trying to invent new ones from scratch.\nActively work on the social technology underpinning how the group runs itself, and try to extract this into reusable standalone features.\n\nAs well as producing the actual final products, there would probably be:\n\nA lot of writing about the things we learn along the way.\nVarious professional services built on top of this. I think there is quite a lot of scope for this to lead into a lucrative consulting and training business around these things, as a lot of it would be quite useful to companies.\n\nWhat would this need?\nMy dream version of this where I get to run an actual R&D institution looks something like this.\nStaff would be:\n\nA small team of about 5 for the actual R&D.\nSomeone to do admin.\nProbably someone to do sales and marketing? Certainly this would be needed eventually.\n\nA lot of this would need to be done in person (at least post COVID...). This would require an office and a studio space for running events.\nOn top of that there would need to be budget for:\n\nAll the usual company stuff. Computers, paying for software, etc.\nQuite a lot of training, partly for people's personal growth, partly because it's important research.\nHiring people on one off contracts, for a mix of:\nConsulting specialists\nPaying people to do initial playtesting.\nA flexible group of people who we could bring in to do various research tasks (e.g. send out a bunch of interns to learn more about different meetup groups).\n\nI'm expecting the professional services arm of the group would do quite well (it's potentially very high value for corporate customers). Initially (and to some degree ongoing - it's a good habit to keep your hand in on) this would be done by the R&D team. With increased demand, it would be necessary to bring on more staff to keep up with it, and eventually I would expect us to transition to having a full training arm.\nHow plausible is all this?\nHonestly pretty plausible. Some of it is stuff I could do today, and may well start doing as I start providing more consulting and corporate training options built in to my existing work. It's possible that in five years time I may be doing exactly what I describe given no external intervention, assuming I still think it's a good idea.\nThe big questions are:\n\nIs there as much low hanging fruit as I think there is? (I'm reasonably confident there is)\nAm I underestimating the amount of work playtesting takes? (I don't think so, in the sense that the amount of work people currently do is so low that even modest amounts would be an improvement)\nIs there really enough demand for this to fund it? (I'm genuinely unsure about this one, but I think it's likely that there is if it's pitched right).\nWould this end up a niche thing used only by corporates and weirdos? (This is a totally plausible failure mode. Certainly I expect many of the things we develop would never see wide adoption. But I figure worst case scenario we make a lot of money improving various work environments and maybe make one or two useful prosocial innovations)\n\nAll told I'd be very surprised if something in this space couldn't be made to work, and also very surprised if what ends up working looks exactly like I've outlined in this document, because technology startups never work out that way, and that's ultimately what this idea is.\n\n\n2021-07-31\nUnlearning\n\nPublished\n2021-07-31\n\nI got distracted, and it got late, so here's a short piece on how schools are terrible, as this seems to be the thing I'm talking about today.\nFrom \"How Children Fail\", page 259:\n\nThe confused and hopeless children that I have worked with naturally never test as well as their abler classmates; but they are never much more than a year or two behind. This year, according to the tests, my worst pupils had the mathematical knowledge and skill of an average child entering the fourth grade. In short, they presumably knew addition, subtraction, place value, multiplication, and easy division. But this is utter nonsense. These children know nothing about arithmetic; in any real sense they don't know what first-graders are suppsoed to know. An accurate test, if there could be such a thing, a measuring instrument that really measured something, would give them a score of one point something [compared to a peer average of 5.5].\nNo. Much closer to the truth to say that an accurate test, if there had been such a thing, would have given them a minus score. After five years of school - in one of the \"best\" schools - they were worse off, in terms of arithmetic (and not just arithmetic), than if they had never been in school at all.\nHow are these high scores achieved? A week or two before the tests, their teachers begin an intensive drilling on all the kinds of problems they will have to do on the test. By the time the test comes along the children are conditioned, like Pavlov's dog; when they see a certain arrangement of numerals and symbols before them, lights begin to flash, wheels begin to turn, and like robots they go through the answer-getting process, or enough of them to get a halfway decent score. Teachers are not supposed to do this; but they all do.\n\nOne of the things that I often end up arguing about with regards to schools is whether it's good that they teach the things they do. Surely it's better for people to learn a bit of writing, mathematics, etc. that they can build on later, even if they're taught less well than they could be?\nHonestly, I think it's not, because this assumes that \"taught less well than they could be\" is like \"taught as well as they could be\" but less so, but that's mostly not the case. Instead people are taught things that they shouldn't be, in the sense that the things they are taught are wrong and/or useless, and stand in the way of them later learning things properly.\nSome of this is the sort of \"emotional lesson\" I talked about in The trauma model of talent blocks. Maria has a good thread of such lessons.\nThis also extends to more practical things.\nThe above anecdote about mathematics education is I think a good example of this: Even if you could help those kids unlearn all of their traumatic associations with mathematics, they've had their head filled with nonsensical rules and rituals they've memorised that are going to actively get in the way.\nThis also happens when people are \"good\" at the subject, because people can learn to pass tests to a really very high grade on this kind of rote memorisation. I once had to explain to someone doing university physics that the expression f(x) didn't mean f multiplied by x, but instead evaluating the function f at the value x. It's literally impossible that she had gotten to that point without having to apply functions, but she'd just learned the rules to follow and had no working model of mathematics on which to base those rules. She probably got this untangled OK without having to unlearn everything (I wasn't much help, and honestly probably wasn't very nice about it, but in my defence I was 18 at the time).\nMathematics has the advantage that at least if you're able to figure the subject out you can pass it well by actually being good at mathematics. Some skills, this is harder. Being actually good at writing doesn't help unless you're also school good at writing, and school good at writing produces really boring writing. See Larry McEnerney's critiques for details. Most people have writing habits they need to unlearn from school, and they'd probably have been better off spending their English classes writing fanfic and arguing on tumblr.\n(This isn't a dig exactly, those are both very good ways to learn to write)\nI also notice that people very much need to unlearn reading habits. Most people I know who were book worms as kids struggle to read as adults, and my advice for this is basically read badly. I don't know that this one is a school leftover, but it sure feels like it to me.\nI don't set educational policy, so I don't know what the solution to this is. My personal bias is that when we simultaneously have a problem where we don't have enough school resources, and also most of what we teach is actively harmful, we could solve the former by just teaching way fewer subjects to a higher standard, but there's probably some bad consequence downstream of not ruining most subjects for most people that I'm not currently seeing.\nIn the meantime, I guess my main advice is to notice that this is a thing. When you're trying to learn something you've previously struggled with, you don't just need to overcome hurdles in learning where you previously got stuck, you probably need to back up from the wrong turn you took when trying to work around those.\n\n\n2021-07-30\nCan you throw money at the Collatz Conjecture?\n\nPublished\n2021-07-30\n\nWarning: Inside baseball, very much a set of notes rather than a coherent point.\nFor context, the Collatz conjecture is the following:\nFor any given natural number n, if n is even, move to n2, otherwise move to 3n+1.\nThe Collatz conjecture is that no matter which n we start with, we will eventually reach 1.\nThere is, as far as I know, no particular reason to care about the Collatz conjecture except that it's interesting and that we don't know how to solve it.\nI claimed on Twitter that you could probably solve the Collatz conjecture in a decade, given $1 billion of funding.\nBen Gunby disagrees.\nI don't think we disagreed a lot. My estimate was something like \"this would probably work\", and I think his is something like \"this probably wouldn't work\". As far as I can tell neither of us thinks the other's position is ridiculous, we've just got moderately different views on the problem. That being said, having written all of this up, I've concluded that he's right and I'm wrong, because I had significantly underestimated how hard the Collatz conjecture is.\nI think the following is a fair summary of his argument that this is likely to be very hard:\n\nWe are likely quite far away from techniques that would allow us to tackle the Collatz conjecture.\nIf this is the case, there is likely a long dependency chain in which we have to develop tools to develop tools to develop tools etc.\nIf this is the case, this likely passes through many fields unrelated to the Collatz conjecture.\n$1 billion is a lot but it's not enough to literally bend the whole of mathematical research to your whims.\n\nTo look at this from another perspective, one can think of this in terms of two questions:\n\nHow many direct mathematician-years of work do we need to solve the Collatz conjecture? i.e. if you add up all the mathematician-years of work spent on the proof and things it depends on, what do you get?\nHow many mathematician-years of work do we realistically need to do in order to actually achieve that? This would be the same if you could just linearly proceed from A to B, but if you depend on unrelated fields you need to take into account work done in equally plausible unrelated fields that you couldn't have known in advance.\nHow much of that work is intrinsically sequential? e.g. if we decided that it will take 1000 mathematician-years, can we do that in 10 years with 100 mathematicians or are you going to have to do a full 1000 years of work with one mathematician building on the results of another, etc?\n\n(\"mathematician-years\" of course depends on how good the mathematicians in question are. I guess I'm assuming reasonably top end mathematicians)\nI think Ben and my intuitions on these differ as follows:\n\nHis estimate of the number of mathematician-years required is much higher than mine initially was.\nI think you probably can cut out a lot of the unrelated work with a bit of work on focusing people.\nI believe this is more parallelisable than he does.\n\nOn further reading up on the difficulty of the literature I think that he is right and I am wrong about the first one,\nand I've significantly underestimated how hard the Collatz conjecture is. In particular \"The Ultimate Challenge\" by Lagarias has a good survey that made me realise I'd underestimated the problem. Terence Tao made good progress on the problem in 2019 and this good progress established a substantially weaker result than the full conjecture. \nFor comparison, I think reasonable estimates for how many mathematician years went into solving Fermat's Last Theorem are somewhere in the region of 1000 to 10,000 mathmatician years, taking 1900 as the starting point (Most of the work on it that got real traction happened in the 20th century, I think). If on average 100 mathematicians were working on it full time at any given point of that century, that gets us to 10,000. If it's only 10, that's 1,000.\nIs that realistic? I don't know. I could also make a convincing argument that it was less than that (e.g. a lot of the last stretch was Wiles working on his own for 7 years, followed by Wiles and Taylor finishing it off...). But lets say 10,000 mathematicians years is about how much FLT took. It's a nice round number.\nIs the Collatz conjecture about as hard as FLT starting from 1900? I don't know. Based on my reading since Ben and my initial disagremeent... yeah, probably. Possibly even harder. We've got a number of partial results and angles of attack on it, but certainly nothing resembling a convincing story. It might be that it's actually amenable to some easy attack, but I don't think we've got any reason to expect that to be the case, and people who have studied it more than me seem to think it's probably too hard for us right now.\nSuppose now that we could just turn money into mathematician-years. A high end mathematician salary seems to be about $100k. Because we want the best, and also need support staff and infrastructure, lets double that and say that one mathematician year costs us $200k. $1 billion now gets us 5,000 mathematician years.\nSo, based on these (admittedly somewhat pessimistic) estimates, even if we could make a perfect beeline for the Collatz conjecture, if it's about as hard starting from now as Fermat's Last Theorem was starting from 1900, we should not expect to be able to solve it with a mere billion dollars.\nThis is before we even get to the harder questions to quantify. What if exploring all the dead ends means we actually need 100,000 mathematician years?\nAlso, what happens with the dependencies problem? Can we, realistically, do even those 10,000 mathematician-years in 10 years even if we had infinite amounts of money to throw at it?\nI don't have a good handle on this but think the answer is a resounding \"Maybe\". If we again use Fermat's Last Theorem as a benchmark it doesn't seem unreasonable to me to think that we could do this - that's only one order of magnitude reduction, and I think if we had the relevant parties in a room together and were able to more aggressively speed up the collaboration, offer them support, etc. I don't think this is ridiculous. Wiles worked on FLT for 7 years on his own, and I wouldn't be surprised if he could have done that in half with a collaborator to discuss things with.\nThis is all speculative though, I genuinely don't know, and I don't have any way to know. The polymath project gives me some hope that hard mathematical problems are parallelisable, but as far as I know it's never been tried on anything nearly this hard.\nSo, in conclusion, Ben is probably right. You probably can't solve this is in a decade with $1 billion.\nI do think you could probably make meaningful progress on the Collatz conjecture, up to and including solving it, with a mere $1 billion, but I think if I were to do that it would look more like trying to build resources and community around it in the broader mathematical community.\nFor example, for this sort of price tag one could fund:\n\nSome sort of ongoing \"residency\" arrangement where a rotating group of mathematicians get together and work on the Collatz conjecture and related problems for a year.\nMany small cash prizes for Collatz adjacent conjectures\nPut together a small team whose primary job was to essentially shore up results, generate conjectures, and write up the state of the art of current Collatz research\nMany post grad positions for getting people working on the problem for a period of time early in their career\n\nAn alternative approach would be to just hire Terence Tao and Jeffrey Lagarias, and any dozen or so other mathematicians they care to name, and let them go wild on the problem. I doubt it would work, but it might produce something interesting.\n\n\n2021-07-29\nThe changing nature of sick days\n\nPublished\n2021-07-29\n\nOne of the interesting things about the COVID pandemic is that it very much changes the dynamics of sickness (if you're dealing with reasonable people anyway, which I acknowledge many of us are not).\nPreviously, if you called in a sick day, I feel like this was treated as a moral failing. You should just tough it out, come to work anyway, anything else is weakness.\nCOVID-19 has helped highlight the fact that actually no, the reason to call in sick is to avoid giving people a virus. COVID-19 is a particularly bad virus to give people, but it's not like the other ones floating around are much fun either.\nThe flip side of this of course is that although there's a stronger case to call in sick, when you're already working from home the fact that you just feel a bit grotty doesn't really stop you from working. It just reduces your capacity - unless you're really badly off you still can do some work, you just would rather not. As a result, you take both more and fewer sick days, depending on how one interprets the term.\nIf you're not noticeably ill, this has no effect. If you're very ill, this also has no effect (or minimal - you need to convincingly demonstrate that you're very ill). In the middle it has the odd effect of making things better if you're not ill enough that you would previously have stayed home, and worse if you are ill enough that you would have.\nNot that too many people are going in to the office right now anyway, so this is mostly hypothetical, I'm just interested in thinking about what impact COVID will have on our social norms. Maybe none.\nFor my part, the big differences are just that I'm more willing to cancel social events when I have a cold. I don't know if that will last when there's no longer a pandemic on.\nI'm essentially self-employed, so COVID didn't make much difference to my attitude personally. I tend to do what I can, such as write a very mediocre post about sick days, when ill, and stick to coaching sessions I've committed to unless I'm utterly nonfunctional, but otherwise don't worry about it too much.\nIn general I feel like modern life is not well set up for the intrinsic unreliability of humans, especially humans as awash in different virus sources as modern life also brings us, but I'll leave musing further on that for some time when my brain is working better.\n\n2021-07\n\n2021-06\n\n2021-04\n\n2021-01\n\n2020-12\n\n2020-08\n\n2020-07\n\n2020-06\n\n2020-05\n\n2020-04\n\n2020-03\n\n2020-02\n\n2019-12\n\n2019-11\n\n2019-09\n\n2019-08\n\n2019-07\n\n2019-06\n\n2019-05\n\n2019-04\n\n2019-03\n\n2019-02\n\n2019-01\n\n2018-12\n\n2018-11\n\n2018-10\n\n2018-09\n\n2018-08\n\n"
                ],
                "output": "readability",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:01:01.616720+00:00",
                "status": "succeeded"
            }
        ],
        "screenshot": [
            {
                "cmd": [
                    "chromium-browser",
                    "--headless",
                    "--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)",
                    "--window-size=1440,2000",
                    "--timeout=90000",
                    "--screenshot",
                    "https://notebook.drmaciver.com/"
                ],
                "cmd_version": "Chromium 93.0.4577.82",
                "end_ts": "2021-09-26T22:00:59.994957+00:00",
                "index_texts": null,
                "output": "screenshot.png",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:00:57.730866+00:00",
                "status": "succeeded"
            }
        ],
        "singlefile": [
            {
                "cmd": [
                    "/home/wesleyac/code/notebook/data/archivebox/node_modules/single-file/cli/single-file",
                    "--browser-executable-path=chromium-browser",
                    "--browser-args=[\"--headless\", \"--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/{VERSION} (+https://github.com/ArchiveBox/ArchiveBox/)\", \"--window-size=1440,2000\"]",
                    "https://notebook.drmaciver.com/",
                    "singlefile.html"
                ],
                "cmd_version": "0.3.31",
                "end_ts": "2021-09-26T22:00:57.708114+00:00",
                "index_texts": null,
                "output": "singlefile.html",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:00:45.777630+00:00",
                "status": "succeeded"
            }
        ],
        "title": [
            {
                "cmd": [
                    "curl",
                    "--silent",
                    "--location",
                    "--compressed",
                    "--max-time",
                    "90",
                    "--user-agent",
                    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.61 Safari/537.36 ArchiveBox/0.6.2 (+https://github.com/ArchiveBox/ArchiveBox/) curl/curl 7.76.1 (x86_64-pc-linux-gnu)",
                    "https://notebook.drmaciver.com/"
                ],
                "cmd_version": "curl 7.76.1 (x86_64-pc-linux-gnu)",
                "end_ts": "2021-09-26T22:00:45.085476+00:00",
                "index_texts": null,
                "output": "DRMacIver's Notebook: Thoughts from David R. MacIver",
                "pwd": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
                "schema": "ArchiveResult",
                "start_ts": "2021-09-26T22:00:44.702513+00:00",
                "status": "succeeded"
            }
        ],
        "wget": []
    },
    "icons": null,
    "is_archived": true,
    "is_static": false,
    "latest": {
        "archive_org": "https://web.archive.org/web/20210926220139/https://notebook.drmaciver.com/",
        "dom": "output.html",
        "favicon": "favicon.ico",
        "git": null,
        "media": null,
        "pdf": null,
        "screenshot": "screenshot.png",
        "singlefile": "singlefile.html",
        "title": "DRMacIver's Notebook: Thoughts from David R. MacIver",
        "warc": null,
        "wget": null
    },
    "link_dir": "/home/wesleyac/code/notebook/data/archivebox/archive/1632693644.460187",
    "newest_archive_date": "2021-09-26T22:01:13.830371+00:00",
    "num_failures": 0,
    "num_outputs": 9,
    "oldest_archive_date": "2021-09-26T22:00:44.702513+00:00",
    "path": "/",
    "schema": "Link",
    "scheme": "https",
    "snapshot_id": "4cc733bb-39ff-48d8-9143-2f8b7e005c8c",
    "sources": [
        "/home/wesleyac/code/notebook/data/archivebox/sources/1632693644-import.txt"
    ],
    "tags": null,
    "tags_str": "",
    "timestamp": "1632693644.460187",
    "title": "DRMacIver's Notebook: Thoughts from David R. MacIver",
    "updated": "2021-09-26T22:00:44.700278+00:00",
    "updated_date": "2021-09-26 22:00",
    "url": "https://notebook.drmaciver.com/"
}